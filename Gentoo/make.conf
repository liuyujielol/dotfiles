# These settings were set by the catalyst build script that automatically
# built this stage.
# Please consult /usr/share/portage/config/make.conf.example for a more
# detailed example.
COMMON_FLAGS="-march=native -O2 -pipe"
CFLAGS="${COMMON_FLAGS}"
CXXFLAGS="${COMMON_FLAGS}"
FCFLAGS="${COMMON_FLAGS}"
FFLAGS="${COMMON_FLAGS}"
#LDFLAGS="${COMMON_FLAGS} -Wl,-O2 -Wl,--as-needed -Wl,--hash-style=gnu -Wl,--sort-common -Wl,--strip-all"
MAKEOPTS="-j15"
#CPU_FLAGS_X86="aes avx avx2 f16c fma3 mmx mmxext pclmul popcnt sse sse2 sse3 sse4_1 sse4_2 ssse3"
CPU_FLAGS_X86="aes avx avx2 f16c fma3 mmx mmxext pclmul popcnt rdrand sha sse sse2 sse3 sse4_1 sse4_2 sse4a ssse3"

#CHOST="x86_64-pc-linux-gnu"
EMERGE_DEFAULT_OPTS="--with-bdeps=y --ask --verbose=y --load-average --keep-going --deep"
# NOTE: This stage was built with the bindist Use flag enabled
PORTDIR="/var/db/repos/gentoo"
DISTDIR="/var/cache/distfiles"
PKGDIR="/var/cache/binpkgs"
PORTAGE_TMPDIR="/tmp"

# This sets the language of build output to English.
# Please keep this setting intact when reporting bugs.
LC_MESSAGES=C

USE="-bindist -doc -test -gnome-shell -gnome -gnome-keyring -handbook \
     wayland -oss -gpm -iptables -bluetooth systemd gdbm iwd icu \
     nftables X staging fortran lto pgo graphite openmp minizip blkid \
     efi hwdb smack kde alsa sudo cjk ccache network udisks aria2 \
     networkmanager connection-sharing wifi ppp vdpau vaapi vulkan \
     layers -nvidia glamor http2 vim-syntax threads zstd \
     lm-sensors gles2 pulseaudio mtp ibus emoji vim"
ACCEPT_LICENSE="*"
ACCEPT_KEYWORDS="~amd64"
L10N="en-US zh-CN en zh"
#LINGUAS="en-US zh-CN en zh"
AUTO_CLEAN="yes"

GRUB_PLATFORMS="efi-64"

VIDEO_CARDS="amdgpu radeon radeonsi"
ALSA_CARDS="hda-intel"
INPUT_DEVICES="libinput"
CAMERAS=""
MICROCODE_SIGNATURES="-S"

LLVM_TARGETS="X86"
PHP_TARGETS="php7-4"
#LUA_TARGETS="lua5-4"
#LUA_SINGLE_TARGET="lua5-4"
RUBY_TARGETS="ruby27"
GENTOO_MIRRORS="https://mirrors.ustc.edu.cn/gentoo https://mirrors.163.com/gentoo"

#aria2
FETCHCOMMAND="/usr/bin/aria2c -d \${DISTDIR} -o \${FILE} --allow-overwrite=true --max-tries=5 --max-file-not-found=2 --max-concurrent-downloads=5 --connect-timeout=5 --timeout=5 --split=5 --min-split-size=2M --lowest-speed-limit=20K --max-connection-per-server=9 --uri-selector=feedback \${URI}"
RESUMECOMMAND="${FETCHCOMMAND}"

#ccache
FEATURES="ccache -test"
CCACHE_DIR="/var/cache/ccache"
